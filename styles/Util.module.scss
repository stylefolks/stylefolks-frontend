//https://codepen.io/carpenumidium/pen/ZOjawV
$lines: 16; // no of <li> elements, has to be an even number. Still learning how sass works, I'm getting a warning when an odd number is used.
$delayandduration: 4;
.flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flexSpaceBetween {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.flexInlinCenter {
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

.flexColumnCenter {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.clickable {
  cursor: pointer;
}

.ableButton {
  background-color: white;
}

.isActiveColor {
  color: $font-color-main;
}

.hidden {
  display: none;
}

.disabledClickButton {
  background-color: gray;
}

.button {
  background-color: white;
  border: 1px solid black;
  transition: all 0.5s ease-in-out;
  color: black;
  width: 100%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  margin: 2rem 0;
  padding: 12px 7px;

  &:hover {
    background-color: black;
    color: white;
  }

  span {
    margin-left: 10px;
  }
}

.input {
  padding: 0.1rem;
  padding-left: 0.55rem;
  font-size: 1.125rem;
  line-height: 1.75rem;
  font-weight: 300;
  height: calc(1.1em + 2px);
}

.input:focus {
  --tw-border-opacity: 1;
  border-color: rgba(107, 114, 128, var(--tw-border-opacity));
}

.inputWrapper {
  display: flex;
  flex-direction: column;
  width: 100%;

  label {
    margin: 0.6rem 0;
  }
}

.form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}

.errorFormWrapper {
  min-height: 25px;
  display: flex;
  align-items: center;
}

.noBorder {
  border: 1px solid white;
  transition: all 0.5s ease in-out;

  &:hover {
    border: 1px solid #22bad9;
  }
}

.portalContainer {
  position: fixed;
  right: 0px;
  left: 0px;
  bottom: 0px;
  top: 0px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.5);
  overflow: hidden;
  transition: all 0.2s ease;
  z-index: 100;
}

.alertWrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 320px;
  height: calc(320px * 9 / 16);
  border: 1px solid black;
  border-radius: 12px;
  background-color: white;

  & > span {
    &:first-child {
      font-weight: bold;
      font-size: 1.2rem;
      margin-bottom: 1rem;
    }
    &:nth-child(2) {
      font-weight: 400;
      font-size: 13px;
    }
  }

  & > div {
    display: flex;
    margin-top: 20px;

    button {
      border: 1px solid $back-color-main;
      transition: all 0.2s ease-in-out;

      &:hover {
        background-color: $back-color-main;
        color: $font-color-main;
      }

      &:first-child {
        margin-right: 8px;
      }
    }
  }
}

.spinnerContainer {
  overflow: hidden;
  perspective: 900px;
  list-style: none;
  height: 100vh;
  width: 100vw;
  max-height: 800px;
  min-height: 400px;
  text-align: center;

  @keyframes width-sway {
    0%,
    100% {
      width: 500px;
      transform: rotate(10deg);
    }
    50% {
      width: 100%;
      transform: rotate(-10deg);
    }
  }
  @keyframes spiral-staircase {
    0% {
      transform: rotateY(90deg) translateY(105vh) rotate(0deg);
    }
    0%,
    100% {
      // opacity: 0;
    }
    50% {
      transform: rotateY(0deg) translateY(50vh) rotate(0deg);
      // opacity: 1;
    }
    100% {
      transform: rotateY(-90deg) translateY(-5vh) rotate(0deg);
    }
  }

  li {
    position: absolute;
    top: 0;
    width: 100%;

    transform: translateY(100vh);

    font-size: 1.5rem;
    font-family: sans-serif;
    font-weight: bold;
    color: $back-color-main;

    animation: spiral-staircase #{$lines/$delayandduration}s linear infinite;

    &:hover {
      color: $font-color-main;
    }
  }

  @for $i from 1 through $lines {
    li:nth-child(#{$i}) {
      animation-delay: #{$i/$delayandduration}s;
    }
  }

  @for $r from 1 through $lines/2 {
    li:nth-child(#{$r}) {
      right: #{$r}rem;
    }
    li:nth-last-child(#{$r}) {
      right: #{$r}rem;
    }
  }
}
